CREATE OR REPLACE TYPE TAB_ACTIVIDAD IS TABLE OF VARCHAR2(100);
/
CREATE OR REPLACE TYPE T_CONTRIBUYENTE IS OBJECT (
    RUC VARCHAR2(11),
    NOMBRE VARCHAR2(50),
    APELLIDO_RAZON VARCHAR2(50),
    TIPO_CONTRIBUYENTE VARCHAR2(1),
    HABILITADO VARCHAR2(1),
    FECHA_VALIDEZ DATE,
    ACTIVIDADES TAB_ACTIVIDAD,
    MEMBER PROCEDURE P_VERIFICAR_HABILITACION,
    STATIC FUNCTION F_OBTENER_CONTRIBUYENTE(P_RUC VARCHAR2) RETURN T_CONTRIBUYENTE
);
/
CREATE OR REPLACE TYPE BODY T_CONTRIBUYENTE IS
    MEMBER PROCEDURE P_VERIFICAR_HABILITACION IS
        V_FECHA_ULTIMO_PAGO DATE;
    BEGIN
        SELECT MAX(TO_DATE(TO_CHAR(d.PERIODO_ANIO, '9999') || TO_CHAR(d.PERIODO_MES, '09'), 'YYYYMM'))
            INTO V_FECHA_ULTIMO_PAGO
        FROM DECLARACION d JOIN PAGOS p ON d.ID = p.ID 
        WHERE d.RUC = SELF.RUC;

        IF MONTHS_BETWEEN(SYSDATE, V_FECHA_ULTIMO_PAGO) >= 1 THEN
            SELF.HABILITADO := 'N';
        ELSE
            SELF.HABILITADO := 'S';
        END IF;
    END;

    STATIC FUNCTION F_OBTENER_CONTRIBUYENTE(P_RUC VARCHAR2) RETURN T_CONTRIBUYENTE IS
        O_CONTRIBUYENTE T_CONTRIBUYENTE;
        CURSOR C_ACTIVIDADES_RUC IS 
            SELECT ra.DESCRIPCION_ACTIVIDAD 
            FROM ACTIVIDAD a JOIN RUBRO_ACTIVIDAD ra ON a.COD_ACTIVIDAD = ra.COD_ACTIVIDAD
            WHERE a.RUC = P_RUC;
        V_CONTRIB CONTRIBUYENTE%ROWTYPE;
        V_ACTIVIDADES TAB_ACTIVIDAD := TAB_ACTIVIDAD();
        IND NUMBER(2) := 1;
    BEGIN
        SELECT * INTO V_CONTRIB FROM CONTRIBUYENTE c  WHERE c.RUC = P_RUC;

        FOR ACT IN C_ACTIVIDADES_RUC LOOP
            V_ACTIVIDADES.EXTEND;
            V_ACTIVIDADES(IND):= ACT.DESCRIPCION_ACTIVIDAD;
            IND := IND + 1;
        END LOOP;

        O_CONTRIBUYENTE := T_CONTRIBUYENTE(
            V_CONTRIB.RUC,
            V_CONTRIB.NOMBRE,
            V_CONTRIB.APELLIDO_RAZON,
            V_CONTRIB.TIPO_CONTRIB,
            V_CONTRIB.HABILITADO,
            V_CONTRIB.FECHA_VALIDEZ,
            V_ACTIVIDADES);
        RETURN O_CONTRIBUYENTE;
    END;
END;
/

CREATE TABLE NUEVO_CONTRIBUYENTE OF T_CONTRIBUYENTE
NESTED TABLE ACTIVIDADES STORE AS TAB_ACTIVIDADES;
